var tipuesearch = {"pages": [{'title': 'About', 'text': '網頁:  https://40923124.github.io/cd2024/ \n 網誌: https://40923124.github.io/cd2024/blog \n 簡報:\xa0 https://40923124.github.io/cd2024/reveal \n 倉儲:  https://github.com/40923124/cd2024/ \n 本 cmsimde 網際內容管理系統的對應 Template 倉儲: \n https://github.com/mdecycu/cmsimde_site \n 此 Template 將 cmsimde 作為子目錄而非子模組, 使用者可以依照需求自行修改 \n 倉儲對應網站:  https://mde.tw/cmsimde_site \n', 'tags': '', 'url': 'About.html'}, {'title': 'cmsimde', 'text': "SMap  - SiteMap - 依照階次列出網站的所有頁面. \n EditA  - Edit All page - 將所有頁面放入編輯模式中, 主要用來處理頁面搬遷, 刪除或決定衝突頁面內容版本. \n Edit  - Edit page - 先選擇要編輯的單一頁面後, 再點選 Edit, 即可進入單一頁面的編輯模式. \n Config  - Configure Site - 編輯頁面標題與管理者密碼. \n Search  - 動態頁面內容的關鍵字搜尋. \n IUpload  - Image file Upload - 圖檔的上傳功能, 可以上傳 jpg, png 與 gif 檔案, 其中若在手機上傳圖檔, 系統會自動將圖片檔案縮小為 800x800 大小. \n IList  - Image file List - 列出可以直接在頁面編輯模式中引用的圖片檔案. \n FUpload  - File Upload - 一般檔案的上傳功能, 目前可以上傳的檔案副檔名包括 'jpg', 'png', 'gif', '7z', 'pdf', 'zip', 'ttt', 'stl', 'txt', 'html', 'mp4' 等, 使用者可以自行修改. \n FList  - File List - 列出可以直接在頁面編輯模式中引用的上傳檔案. \n Logout  - 登出頁面編輯模式. \n Convert  - 將動態網站中位於 config/content.htm 檔案, 透過分頁設定轉為 content 目錄中的靜態網頁. \n acp  - git add, git commit 與 git push, 通常只有在 localhost 或自架主機上利用網頁表單協助將倉儲改版內容推向 Github 倉儲. \n SStatic  - Start Static Site - 利用 Python 啟動網站伺服功能, 可以讓使用者檢查轉檔後的靜態網站內容. \n RStatic  - Replit Static Site URL - 僅用於 Replit 模式, 當使用者按下 SStatic 後, 可以按下 RStatic 進入當下尚未推向 Github Pages 的靜態網站. \n 80  - 由 init.py 中 static_port 所決定的連結字串, 一般不使用 80, 只有在 Replit 中為了與動態網站共用 port, 才特別設為 80. \n \n", 'tags': '', 'url': 'cmsimde.html'}, {'title': 'Replit', 'text': 'https://replit.com \n 利用 init_replit 指令安裝所需 Python 模組 chmod u+x init_replit ./init_replit \n On Replit: \n .replit: python3 main.py \n chmod u+x cms init_replit \n ./init_replit \n for cmsimde_site (not needed): git submodule update --init --recursive \n for cmsimde: pip install flask flask_cors bs4 lxml pelican markdown gevent \n password generator:\xa0 https://mde.tw/cmsite/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/b92b16621dd0246c352cf13d6463b333/raw/0bfa669750aba3abe48554509bbd43d65b6e5c82/hashlib_password_generator.py \xa0 \n \n for IPv6 only Ubuntu: .ssh 目錄中的 config, 將 SSH session 名稱設為 github.com: Host github.com User git Hostname github.com ProxyCommand /usr/bin/ncat --proxy p4.cycu.org:3128 --proxy-type http %h %p for Replit: .ssh 目錄中的 config, 將 SSH session 名稱設為 github.com: Host github.com User git Hostname github.co #since Replit works for IPv4, therefore no ProxyCommand setting needed #ProxyCommand /usr/bin/ncat --proxy p4.cycu.org:3128 --proxy-type http %h %p \n \n \n', 'tags': '', 'url': 'Replit.html'}, {'title': 'Brython', 'text': 'https://en.wikipedia.org/wiki/Python_(programming_language) \n Examples: \n https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d \n https://www.geeksforgeeks.org/python-programming-examples/ \n https://www.programiz.com/python-programming/examples \n https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/ \n Python Tutorial: \n https://docs.python.org/3/tutorial/ \n An informal introduction to Python \n Indentation (Python 採 4 個 Spaces 縮排, 以界定執行範圍) \n Variables ( Python Keywords ) \n Comments (# 單行註解, 三個單引號或三個雙引號標註多行註解) \n Numbers  (整數 int(), 浮點數 float()) \n Strings  (字串) \n print (Python 內建函式,  print()  函式) \n Python control flow tools \n for \n if \n range \n open \n read \n lists \n tuples \n dictionaries \n functions \n try ... except \n break \n pass \n classes \n 這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 ( practice_html.txt  動態頁面超文件). \n practice_html.txt  動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用. \n 亦即將所有對應的 html 也使用 Brython 產生, 然後寫為  class  後, 在範例導入時透過  instance  引用. \n <!-- 啟動 Brython -->\n<script>\nwindow.onload=function(){\nbrython({debug:1, pythonpath:[\'./../cmsimde/static/\',\'./../downloads/py/\']});\n}\n</script> \n 從 1 累加到 100: \n 1 add to 100 \n 將 iterable 與 iterator  相關說明 , 利用 Brython 與 Ace Editor 整理在這個頁面. \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n  add 1 to 100 開始  \n \n \n  add 1 to 100 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束   ##########################################  \n 從 1 累加到 100 part2: \n 1 add to 100 cango_three_gears BSnake AI Tetris Rotating Block \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  add 1 to 100 part2 開始  \n \n \n  add 1 to 100 part2 結束 \n  editor2 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n \n \n', 'tags': '', 'url': 'Brython.html'}, {'title': '評分項目', 'text': '課程評分: \n 學員每週編寫網誌內容佔 40% \n 每週上課內容摘要與分組報告執行分工及進度整理 \n 相關資料收集與閱讀心得 \n 分組期中報告 ( LaTeX  -> pdf) 與簡報影片 ( OBS  -> mp4) 佔 20% \n 每組至多 8 人, 期中報告題目:\xa0 ODOO PLM  在協同產品設計上的應用 - 以 鋼球平衡台機電控制系統設計 為例 \n ball_beam_balancing_PID_control_coppeliasim.7z \n ball_beam_balancing_PID_control_coppeliasim_1d_and_2d.7z \n 分組期末報告 ( LaTeX  -> pdf) 與簡報影片 ( OBS  -> mp4) 佔 40% \n 期末報告題目:  網際綜合球類競賽機器人協同設計與模擬 \n 競技場景中必須納入數位計時器與類比記分機構 \n 每場競技時間為 10 分鐘 \n 每隊球員機器人依照各組人數平均分為兩隊 \n 每位機器人球員必須同時具備踢球、取球與投球機構 \n 雙方陣營各有足球門與籃球框各一具 \n 球場中由裁判程式於開場時, 在球場正中央落下 10 球 \n 將球踢進對方球門者得 1 分, 將球投入對方籃框者得 5 分 \n 參考資料: \n https://github.com/mdecd2024/test-ag1 \n https://github.com/mdecd2023/2a3-pj3ag4 \n cad2024_foosball.7z \n https://mde.tw/pj4102 \n 球場參考規格: \n 競技球: 白色, 直徑 0.1m, 重量 0.5kg \n 場地: 長 4m x 寬 2.5m, 外圍以足夠高度之隱形柵欄區隔 \n 足球門: 長 0.6m, 高 0.3m, 寬 0.1m \n 籃板: 長 0.3m, 高 0.3m, 寬 0.1m, 位於足球門上方中央 \n 籃框: 由籃板向場內距離 0.1m, 內徑 0.2m, 框管直徑 0.02 \n 球員尺寸範圍: 長寬高各 0.2m, 重量 5kg \n 根據上述球場參考尺寸規格建置場景下載: \n cd2024_footbasketball_field_specification_step2.7z  (需要密碼) \n \n soccer field image from  public domain . \n', 'tags': '', 'url': '評分項目.html'}, {'title': 'blog', 'text': '在編輯完網誌後，上傳前須將下列指令打上才可上傳，否則完成上傳後網誌會沒有變動。 \n chomd u+x gen_blog \n ./gen_blog \n 網誌路徑需再markdown下 \n \n \n', 'tags': '', 'url': 'blog.html'}, {'title': '每周進度', 'text': '', 'tags': '', 'url': '每周進度.html'}, {'title': 'W1', 'text': '\n 建立個人課程倉儲 \n 登入 github 後，在 taems 中利用老師給的連結建立名稱為 cd2024 的個人倉儲，完成後在設定內進入 Pages 設定改為 main 並儲存，讓github生成網站。 \n Replit \n 用github登入replit，點擊左上 inport form github ，選擇自己的帳號及要加入的倉儲。 \n 雙重認證 \n 登入 github 在設定內進入 Password and authentication，綁定個人手機。 \n', 'tags': '', 'url': 'W1.html'}, {'title': 'W2', 'text': '\n 利用 Github Classroom 指定分組倉儲 \n 先由組長創建出小組，組員再加入其中 \n 利用 Codespaces 維護倉儲與網站 \n 目前Github Codespaces 免費帳號每月可以使用 120 core hours, 所以可以選擇在 Github 倉儲中編輯 markdown 目錄中的網誌 .md 文章後, 只在需要利用 pelican 轉檔或啟動編輯 config/content.htm 與轉靜態網頁內容時, 才啟用 Codespaces.這樣才能最佳化使用Github Codespaces. \n 在近端執行動態網站 \n 利用老師給我們的程式在近端維護動態網站，即使不用網路也能使用，維護完成後再連網上傳即可。檔案在 此處 可下載 \n', 'tags': '', 'url': 'W2.html'}, {'title': 'W3', 'text': '\n 期中協同分組報告 \n 由各組員在其個人的 cd2024 倉儲中, 以 LaTeX 格式分工完成下列文章的英文與中文翻譯並列資料 \n \n 將個人倉儲設為分組倉儲的子模組 \n \n \n \n', 'tags': '', 'url': 'W3.html'}, {'title': 'W4-W5', 'text': '分組任務 \n 將以發布的教學影片填上字幕，再將字幕整理出逐字稿，在影片下方說明該影片的教學重點 \n \n \n 逐字稿 \n 摘要：\xa0\xa0  1.如何建立組別倉儲並加入\xa0\xa0\xa0\xa0 2.如何Codespaces 維護分組倉儲 \n \n -------------------------------------------------------------------- \n \n 介紹Github 倉儲的維護方式 \n (一)：Replit Replit 目前所提供的免費帳號, 雖然沒有太多的運算資源, 但並沒有使用時間的限制, 因此若能利用 python3 main.py 執行動態網站, 而且利用 python3 main2.py 執行靜態網站, 只要區分開動態網站與靜態網站的使用, 就可以順利在 Replit 上維護個人與分組的網站內容. \n (二)：Codespaces 位於 https://github.com/codespaces, 是 Github 帳號下個倉儲的延伸功能, 每一個免費 Github 帳號每個月有 120 core-hours 的使用限制, 每一個免費 codespace 最小配置 2core, 可以提升至 4core. \n (三)：Gitpod 位於 https://gitpod.io, 是一套類似 Codespaces 的雲端 IDE 服務系統, 可以直接採 Github 帳號登入, 免費使用授權時間為每月 50 小時, 若採 Github 帳號登入, 則可以直接導入該帳號下的個人倉儲進行維護. \n (四)：localhost localhost 採用的是 portable_2024 可攜程式系統, 啟動後, 可以用來執行個人與分組的倉儲維護, 只是若在 Windows 系統可以選擇較簡單的 token 綁定授權, 或者使用 Putty 設定的 SSH 使用授權, 唯一必須注意的是, Putty 所建立的 session 資料會直接登錄到操作系統的登錄檔案 (Registry), 使用者必須將此 session 以 .reg 的格式匯出, 存在隨身碟, 並在每次要使用此一授權時, 以滑鼠在實體檔案路徑下的 my_putty_session.reg (不能使用虛擬的檔案路徑, 例如: 不能點擊位於 Y: 目錄下的 .reg 登錄設定檔案) \n', 'tags': '', 'url': 'W4-W5.html'}, {'title': 'W6-W10', 'text': '', 'tags': '', 'url': 'W6-W10.html'}, {'title': '任務一', 'text': '建立各班學員的倉儲、網站與分組連結 \n 這是 W10的任務一: \n 已知:  2b 初步資料放入數列  可以將  2b.txt  即時資料取出, 並且將每一行隔開後, 逐一放入數列. \n 後續處理: 只要透過 for 重複迴圈, 就可以從上列資料中每位學員的基本資料 (學號、Github 帳號與組別) 中直接在網頁建立所需的 html. \n 學員倉儲連結 template: https://github.com/學員帳號/cd2024 \n 學員網站連結 template: https://學員帳號.github.io/cd2024 \n 2b 分組倉儲連結 template: https://github.com/mdecd2024/2b-midbg組別 \n 2a 分組倉儲連結 template:  https://github.com/mdecd2024/2a-midag組別 \n \n 列出 2b 各學員評分相關網站 \n 列出 2a 各學員評分相關網站 \n', 'tags': '', 'url': '任務一.html'}, {'title': '任務二', 'text': '閱讀結果： 各篇論文要點摘要： 論文一：Construction and theoretical study of a ball balancing platform 在動態系統領域運作時，控制理論及其應用至關重要。補償對固有不穩定或半穩定的給定係統施加的干擾和外部作用。 為了進行比較，有必要設計一個能夠滿足系統需求的令人滿意的控制器。在設備和控制方面，引入了比例積分微分控制器，用於平衡平台上的球的系統。進一步允許分析以確定穩定自然不穩定或半穩定係統時的限制。 論文二：A real time control system for balancing a ball on a platform with FPGA parallel implementation 在我們的後工業時代，對自動化的需求並沒有減少。物聯網、無人駕駛汽車、機器人和其他具有許多參數的複雜物體的使用為控制系統的開發和效率帶來了新的挑戰。因此，多參數複雜物件的即時控制系統的開發、研究和設計是一個現實的任務。 論文三：Simulation and Experimental Study of Ball Position Control at Biaxial Platform using State Space Approach 板球平台是測試各種控制技術的絕佳工具。本研究提供了三種控制結構的詳細設計和比較，用於自動穩定球在板上的位置和球軌跡追蹤。即PD控制器、狀態空間回授和具有狀態空間回授的狀態空間觀測器。對這三種方法進行了設計和實際比較。所有結構都有一個共同特徵。它是計算控制器參數的方法。牛頓法導出的板球數學模型和直流馬達位置環控制也是本文的一部分。 論文四：Design and Implementation a Ball Balancing System for Control Theory Course 該專案的主要目的是開發一個球平衡系統來保持球平衡在光束上使用微控制器和相關控制演算法來調整光束角度具有即時感官回饋。在此過程中，三製作原型並相互比較，特別是在合理性和成本方面。整個系統可輕鬆設計，整合一台伺服馬達、一距離感測器、一塊微控制器板和一個機械平台。此系統可用於本科生學習和理解比例積分微分的基礎知識（PID）控制。 論文五：Ball on the plate balancing control system 平衡問題是從教育到交通等許多領域的應用中持續研究的挑戰。二自由度球平衡實驗室試驗台是了解控制系統的重要設備。本文將重點放在平衡板上球的機械設計和控制演算法。該設備配備了用於採集球位置數據的電阻式觸控螢幕、用於平台傾角反饋數據的帶有位置感測器的步進電機以及用於保持球位置的帶有PID控制器的基於AVR微控制器的二迴路從屬控制系統。 \n \n 論文六：2D Ball Balancer Control using QUARC \n 2D 球平衡器實驗的目的是將球穩定到平衡板上的所需位置。使用比例積分微分 (PID) 系列，控制系統被設計為滿足一組規格。 探索了設定點權重和積分器抗飽和等控制技術。 ‧使用設備模型模擬球和梁控制，並確保滿足規格且沒有任何執行器飽和。 ‧在Quanser 2DBB 設備上實現控制器並評估其性能。 \n', 'tags': '', 'url': '任務二.html'}, {'title': '任務三', 'text': '\n 鋼球平衡台零組件繪圖 \n 根據  Solvespace_model _2d_for_cd2024_w6.7z  零組件尺寸, 利用  Siemens NX1872.7z  (需要登入 @nfu.edu.tw, cd2024 採用電腦安裝的 NX1872 或隨身碟中的 NX1872) 執行零組件繪圖, 完成後請將過程影片放入個人與分組網站中. \n', 'tags': '', 'url': '任務三.html'}, {'title': 'W11', 'text': '各周重點整理 \n \n 1.個人 cd2024 與分組倉儲的建立及維護. \n 2. 各分組註冊一個 Odoo 帳號, 選用免費的 PLM 模組, 取得各分組的產品生命週期管理系統網域, 並將參考論文的協同 翻譯流程作為工作項目, 在各分組的 PLM 網域系統中留下任務分配與紀錄, 最終產出為一份參考論文的中英文翻譯並列 pdf 檔案, 其中包含各組員的心得報告. \n 3.指定在參考論文的翻譯與閱讀過程, 將各組員的 cd2024 課程倉儲納為分組倉儲的子模組, 可以將各組員倉儲中的 LaTeX 原始資料, 整合至分組倉儲中, 採 Github Actions 或近端使用 MikTeX 建立分組的參考論文閱讀報告 pdf 檔案(教學). \n 4.要求各分組採協同方式, 在各教學影片上填上字幕並嵌入個人網站, 分工整理影片逐字稿與教學重點, 最後完成期中自 評, 在期中考週將自評成績送至教務處. \n 5.要求下載 Siemens NX 1872 至個人隨身碟或電腦 (含筆電), 後續專案系統的零組件繪圖可採電腦輔助設計室固態硬碟 所安裝的 NX1872 或隨身碟中的可攜系統, 必須透過連網取得認證後才能開啟. \n 6.提醒 CoppeliaSim 不同版本中存檔上的差異, 並強調 cd2024 將沿用 cad2023 課程中所使用的 4.5.1 版. \n 7.提示 各分組可以利用可攜式 Sourcetree 套件, 在近端充分了解個人倉儲與分組倉儲的各種改版或解決衝突議題. \n 8.在第七週摘要出 cd2024 各項分組協同模式的要點及執行方法. \n 9.在第八週說明如何應用 AI 協助先前閱讀論文, 整理資料以及延伸模擬程式的方法, 並提出既存鋼球平衡台控制與模擬的實習步驟. 10.第十週起, 要求學員完成三項實習任務. \n', 'tags': '', 'url': 'W11.html'}, {'title': 'W12', 'text': '', 'tags': '', 'url': 'W12.html'}, {'title': 'W12任務一', 'text': '\n 使用Siemens NX Journal錄下建立模型過程，再存成py檔，產生一個建立模型的程式。 \n 檔案 \n \n \n 組立 \n \n', 'tags': '', 'url': 'W12任務一.html'}, {'title': 'W12任務二', 'text': '將 分組倉儲 設為評分網站子模組 \n 以 2a  第一組分組倉儲 為例, 設為 2astud-2asite 倉儲名稱為 g1 的子模組指令為: \n git submodule add https://github.com/mdecd2024/2a-midag1 g1 \n 其餘各班與各組的子模組則依序命名為 g1, g2, g3 ......, 依此類推。', 'tags': '', 'url': 'W12任務二.html'}, {'title': 'W12任務三', 'text': '跨網路操控足球機器人進行競技 \n 從  https://github.com/mdecd2023/2a3-pj3ag4  下載該組當時所完成的倉儲資料, 並參考網際手足球機器人場景設計專案報告, 由各組員分別擔任場景競技球員, 利用鍵盤跨網路操控足球機器人進行球賽競技. \n', 'tags': '', 'url': 'W12任務三.html'}, {'title': 'W17', 'text': '\n \n', 'tags': '', 'url': 'W17.html'}]};